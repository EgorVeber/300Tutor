// Generated by view binder compiler. Do not edit!
package org.threehundredtutor.ui_core.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.threehundredtutor.ui_core.R;

public final class AuthorizationFragmentBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LinearLayoutCompat authContainerLl;

  @NonNull
  public final MaterialToolbar authorizationToolbar;

  @NonNull
  public final TextInputEditText emailEditText;

  @NonNull
  public final TextInputLayout emailTextInput;

  @NonNull
  public final TextView forgotTextView;

  @NonNull
  public final CardView imageContainer;

  @NonNull
  public final ImageView imagePhone;

  @NonNull
  public final ImageView imagePhoneOrEmail;

  @NonNull
  public final AppCompatImageView logo;

  @NonNull
  public final ConstraintLayout mainContainer;

  @NonNull
  public final AppCompatEditText passwordEditText;

  @NonNull
  public final TextInputLayout passwordTextInput;

  @NonNull
  public final TextInputLayout phoneInput;

  @NonNull
  public final TextInputEditText phoneInputEt;

  @NonNull
  public final TextInputLayout phoneOne;

  @NonNull
  public final TextInputEditText phoneOneEt;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final MaterialButton registrationButton;

  @NonNull
  public final MaterialButton signInButton;

  @NonNull
  public final AppCompatImageView tutorImage;

  private AuthorizationFragmentBinding(@NonNull FrameLayout rootView,
      @NonNull LinearLayoutCompat authContainerLl, @NonNull MaterialToolbar authorizationToolbar,
      @NonNull TextInputEditText emailEditText, @NonNull TextInputLayout emailTextInput,
      @NonNull TextView forgotTextView, @NonNull CardView imageContainer,
      @NonNull ImageView imagePhone, @NonNull ImageView imagePhoneOrEmail,
      @NonNull AppCompatImageView logo, @NonNull ConstraintLayout mainContainer,
      @NonNull AppCompatEditText passwordEditText, @NonNull TextInputLayout passwordTextInput,
      @NonNull TextInputLayout phoneInput, @NonNull TextInputEditText phoneInputEt,
      @NonNull TextInputLayout phoneOne, @NonNull TextInputEditText phoneOneEt,
      @NonNull ProgressBar progress, @NonNull MaterialButton registrationButton,
      @NonNull MaterialButton signInButton, @NonNull AppCompatImageView tutorImage) {
    this.rootView = rootView;
    this.authContainerLl = authContainerLl;
    this.authorizationToolbar = authorizationToolbar;
    this.emailEditText = emailEditText;
    this.emailTextInput = emailTextInput;
    this.forgotTextView = forgotTextView;
    this.imageContainer = imageContainer;
    this.imagePhone = imagePhone;
    this.imagePhoneOrEmail = imagePhoneOrEmail;
    this.logo = logo;
    this.mainContainer = mainContainer;
    this.passwordEditText = passwordEditText;
    this.passwordTextInput = passwordTextInput;
    this.phoneInput = phoneInput;
    this.phoneInputEt = phoneInputEt;
    this.phoneOne = phoneOne;
    this.phoneOneEt = phoneOneEt;
    this.progress = progress;
    this.registrationButton = registrationButton;
    this.signInButton = signInButton;
    this.tutorImage = tutorImage;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AuthorizationFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AuthorizationFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.authorization_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AuthorizationFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.authContainerLl;
      LinearLayoutCompat authContainerLl = ViewBindings.findChildViewById(rootView, id);
      if (authContainerLl == null) {
        break missingId;
      }

      id = R.id.authorizationToolbar;
      MaterialToolbar authorizationToolbar = ViewBindings.findChildViewById(rootView, id);
      if (authorizationToolbar == null) {
        break missingId;
      }

      id = R.id.emailEditText;
      TextInputEditText emailEditText = ViewBindings.findChildViewById(rootView, id);
      if (emailEditText == null) {
        break missingId;
      }

      id = R.id.emailTextInput;
      TextInputLayout emailTextInput = ViewBindings.findChildViewById(rootView, id);
      if (emailTextInput == null) {
        break missingId;
      }

      id = R.id.forgotTextView;
      TextView forgotTextView = ViewBindings.findChildViewById(rootView, id);
      if (forgotTextView == null) {
        break missingId;
      }

      id = R.id.imageContainer;
      CardView imageContainer = ViewBindings.findChildViewById(rootView, id);
      if (imageContainer == null) {
        break missingId;
      }

      id = R.id.imagePhone;
      ImageView imagePhone = ViewBindings.findChildViewById(rootView, id);
      if (imagePhone == null) {
        break missingId;
      }

      id = R.id.imagePhoneOrEmail;
      ImageView imagePhoneOrEmail = ViewBindings.findChildViewById(rootView, id);
      if (imagePhoneOrEmail == null) {
        break missingId;
      }

      id = R.id.logo;
      AppCompatImageView logo = ViewBindings.findChildViewById(rootView, id);
      if (logo == null) {
        break missingId;
      }

      id = R.id.mainContainer;
      ConstraintLayout mainContainer = ViewBindings.findChildViewById(rootView, id);
      if (mainContainer == null) {
        break missingId;
      }

      id = R.id.passwordEditText;
      AppCompatEditText passwordEditText = ViewBindings.findChildViewById(rootView, id);
      if (passwordEditText == null) {
        break missingId;
      }

      id = R.id.passwordTextInput;
      TextInputLayout passwordTextInput = ViewBindings.findChildViewById(rootView, id);
      if (passwordTextInput == null) {
        break missingId;
      }

      id = R.id.phoneInput;
      TextInputLayout phoneInput = ViewBindings.findChildViewById(rootView, id);
      if (phoneInput == null) {
        break missingId;
      }

      id = R.id.phoneInputEt;
      TextInputEditText phoneInputEt = ViewBindings.findChildViewById(rootView, id);
      if (phoneInputEt == null) {
        break missingId;
      }

      id = R.id.phoneOne;
      TextInputLayout phoneOne = ViewBindings.findChildViewById(rootView, id);
      if (phoneOne == null) {
        break missingId;
      }

      id = R.id.phoneOneEt;
      TextInputEditText phoneOneEt = ViewBindings.findChildViewById(rootView, id);
      if (phoneOneEt == null) {
        break missingId;
      }

      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.registrationButton;
      MaterialButton registrationButton = ViewBindings.findChildViewById(rootView, id);
      if (registrationButton == null) {
        break missingId;
      }

      id = R.id.signInButton;
      MaterialButton signInButton = ViewBindings.findChildViewById(rootView, id);
      if (signInButton == null) {
        break missingId;
      }

      id = R.id.tutorImage;
      AppCompatImageView tutorImage = ViewBindings.findChildViewById(rootView, id);
      if (tutorImage == null) {
        break missingId;
      }

      return new AuthorizationFragmentBinding((FrameLayout) rootView, authContainerLl,
          authorizationToolbar, emailEditText, emailTextInput, forgotTextView, imageContainer,
          imagePhone, imagePhoneOrEmail, logo, mainContainer, passwordEditText, passwordTextInput,
          phoneInput, phoneInputEt, phoneOne, phoneOneEt, progress, registrationButton,
          signInButton, tutorImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
