// Generated by view binder compiler. Do not edit!
package org.threehundredtutor.ui_core.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import ir.mahozad.android.PieChart;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.threehundredtutor.ui_core.R;

public final class SolutionResultDialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View legendColorView;

  @NonNull
  public final TextView legendTitleView;

  @NonNull
  public final TextView nameTestTv;

  @NonNull
  public final TextView percentResultInfo;

  @NonNull
  public final PieChart pieChart;

  @NonNull
  public final TextView resultTestNeedToCheck;

  @NonNull
  public final TextView resultTestRightQuestion;

  @NonNull
  public final TextView titlePoints;

  @NonNull
  public final View view;

  private SolutionResultDialogBinding(@NonNull ConstraintLayout rootView,
      @NonNull View legendColorView, @NonNull TextView legendTitleView,
      @NonNull TextView nameTestTv, @NonNull TextView percentResultInfo, @NonNull PieChart pieChart,
      @NonNull TextView resultTestNeedToCheck, @NonNull TextView resultTestRightQuestion,
      @NonNull TextView titlePoints, @NonNull View view) {
    this.rootView = rootView;
    this.legendColorView = legendColorView;
    this.legendTitleView = legendTitleView;
    this.nameTestTv = nameTestTv;
    this.percentResultInfo = percentResultInfo;
    this.pieChart = pieChart;
    this.resultTestNeedToCheck = resultTestNeedToCheck;
    this.resultTestRightQuestion = resultTestRightQuestion;
    this.titlePoints = titlePoints;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SolutionResultDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SolutionResultDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.solution_result_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SolutionResultDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.legendColorView;
      View legendColorView = ViewBindings.findChildViewById(rootView, id);
      if (legendColorView == null) {
        break missingId;
      }

      id = R.id.legendTitleView;
      TextView legendTitleView = ViewBindings.findChildViewById(rootView, id);
      if (legendTitleView == null) {
        break missingId;
      }

      id = R.id.nameTestTv;
      TextView nameTestTv = ViewBindings.findChildViewById(rootView, id);
      if (nameTestTv == null) {
        break missingId;
      }

      id = R.id.percentResultInfo;
      TextView percentResultInfo = ViewBindings.findChildViewById(rootView, id);
      if (percentResultInfo == null) {
        break missingId;
      }

      id = R.id.pieChart;
      PieChart pieChart = ViewBindings.findChildViewById(rootView, id);
      if (pieChart == null) {
        break missingId;
      }

      id = R.id.resultTestNeedToCheck;
      TextView resultTestNeedToCheck = ViewBindings.findChildViewById(rootView, id);
      if (resultTestNeedToCheck == null) {
        break missingId;
      }

      id = R.id.resultTestRightQuestion;
      TextView resultTestRightQuestion = ViewBindings.findChildViewById(rootView, id);
      if (resultTestRightQuestion == null) {
        break missingId;
      }

      id = R.id.titlePoints;
      TextView titlePoints = ViewBindings.findChildViewById(rootView, id);
      if (titlePoints == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new SolutionResultDialogBinding((ConstraintLayout) rootView, legendColorView,
          legendTitleView, nameTestTv, percentResultInfo, pieChart, resultTestNeedToCheck,
          resultTestRightQuestion, titlePoints, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
