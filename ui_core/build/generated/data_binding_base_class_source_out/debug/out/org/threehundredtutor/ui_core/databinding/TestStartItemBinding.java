// Generated by view binder compiler. Do not edit!
package org.threehundredtutor.ui_core.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.threehundredtutor.ui_core.R;

public final class TestStartItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView nameTestTv;

  @NonNull
  public final TextView questionCountTv;

  @NonNull
  public final MaterialButton startButton;

  @NonNull
  public final ConstraintLayout subjectLlContainer;

  private TestStartItemBinding(@NonNull ConstraintLayout rootView, @NonNull TextView nameTestTv,
      @NonNull TextView questionCountTv, @NonNull MaterialButton startButton,
      @NonNull ConstraintLayout subjectLlContainer) {
    this.rootView = rootView;
    this.nameTestTv = nameTestTv;
    this.questionCountTv = questionCountTv;
    this.startButton = startButton;
    this.subjectLlContainer = subjectLlContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TestStartItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TestStartItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.test_start_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TestStartItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.nameTestTv;
      TextView nameTestTv = ViewBindings.findChildViewById(rootView, id);
      if (nameTestTv == null) {
        break missingId;
      }

      id = R.id.questionCountTv;
      TextView questionCountTv = ViewBindings.findChildViewById(rootView, id);
      if (questionCountTv == null) {
        break missingId;
      }

      id = R.id.startButton;
      MaterialButton startButton = ViewBindings.findChildViewById(rootView, id);
      if (startButton == null) {
        break missingId;
      }

      ConstraintLayout subjectLlContainer = (ConstraintLayout) rootView;

      return new TestStartItemBinding((ConstraintLayout) rootView, nameTestTv, questionCountTv,
          startButton, subjectLlContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
