// Generated by view binder compiler. Do not edit!
package org.threehundredtutor.ui_core.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.threehundredtutor.ui_core.R;

public final class ViewSnackbarBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Barrier barrier;

  @NonNull
  public final ImageView icSnackbar;

  @NonNull
  public final TextView messageSnackbar;

  @NonNull
  public final MaterialButton snackbarButton;

  @NonNull
  public final TextView titleSnackbar;

  private ViewSnackbarBinding(@NonNull ConstraintLayout rootView, @NonNull Barrier barrier,
      @NonNull ImageView icSnackbar, @NonNull TextView messageSnackbar,
      @NonNull MaterialButton snackbarButton, @NonNull TextView titleSnackbar) {
    this.rootView = rootView;
    this.barrier = barrier;
    this.icSnackbar = icSnackbar;
    this.messageSnackbar = messageSnackbar;
    this.snackbarButton = snackbarButton;
    this.titleSnackbar = titleSnackbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewSnackbarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewSnackbarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_snackbar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewSnackbarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barrier;
      Barrier barrier = ViewBindings.findChildViewById(rootView, id);
      if (barrier == null) {
        break missingId;
      }

      id = R.id.icSnackbar;
      ImageView icSnackbar = ViewBindings.findChildViewById(rootView, id);
      if (icSnackbar == null) {
        break missingId;
      }

      id = R.id.messageSnackbar;
      TextView messageSnackbar = ViewBindings.findChildViewById(rootView, id);
      if (messageSnackbar == null) {
        break missingId;
      }

      id = R.id.snackbarButton;
      MaterialButton snackbarButton = ViewBindings.findChildViewById(rootView, id);
      if (snackbarButton == null) {
        break missingId;
      }

      id = R.id.titleSnackbar;
      TextView titleSnackbar = ViewBindings.findChildViewById(rootView, id);
      if (titleSnackbar == null) {
        break missingId;
      }

      return new ViewSnackbarBinding((ConstraintLayout) rootView, barrier, icSnackbar,
          messageSnackbar, snackbarButton, titleSnackbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
