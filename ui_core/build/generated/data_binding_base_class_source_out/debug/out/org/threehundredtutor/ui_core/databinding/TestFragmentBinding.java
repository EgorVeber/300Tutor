// Generated by view binder compiler. Do not edit!
package org.threehundredtutor.ui_core.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.threehundredtutor.ui_core.R;

public final class TestFragmentBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ProgressBar progress;

  @NonNull
  public final FrameLayout progressContainer;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  @NonNull
  public final RecyclerView testRecycler;

  @NonNull
  public final MaterialToolbar testToolBar;

  private TestFragmentBinding(@NonNull FrameLayout rootView, @NonNull ProgressBar progress,
      @NonNull FrameLayout progressContainer, @NonNull SwipeRefreshLayout swipeRefreshLayout,
      @NonNull RecyclerView testRecycler, @NonNull MaterialToolbar testToolBar) {
    this.rootView = rootView;
    this.progress = progress;
    this.progressContainer = progressContainer;
    this.swipeRefreshLayout = swipeRefreshLayout;
    this.testRecycler = testRecycler;
    this.testToolBar = testToolBar;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TestFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TestFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.test_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TestFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.progress;
      ProgressBar progress = ViewBindings.findChildViewById(rootView, id);
      if (progress == null) {
        break missingId;
      }

      id = R.id.progressContainer;
      FrameLayout progressContainer = ViewBindings.findChildViewById(rootView, id);
      if (progressContainer == null) {
        break missingId;
      }

      id = R.id.swipeRefreshLayout;
      SwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.testRecycler;
      RecyclerView testRecycler = ViewBindings.findChildViewById(rootView, id);
      if (testRecycler == null) {
        break missingId;
      }

      id = R.id.testToolBar;
      MaterialToolbar testToolBar = ViewBindings.findChildViewById(rootView, id);
      if (testToolBar == null) {
        break missingId;
      }

      return new TestFragmentBinding((FrameLayout) rootView, progress, progressContainer,
          swipeRefreshLayout, testRecycler, testToolBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
